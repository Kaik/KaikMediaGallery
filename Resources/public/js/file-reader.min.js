(function (global) {
    'use strict';

    const fileReader = (...args) => {
        //based on actual media data;
        var reader = new FileReader();
	// Set config
	if(typeof args[0] === 'object') {
            
            var fileData = null;
            
	    if(args[0].fileData !== 'undefined') {
                fileData = args[0].fileData;
            }

//            reader.onabort
//            reader.onerror = errorHandler;
//            reader.onprogress = updateProgress;
//            reader.onloadstart = //add progress
	}

	// Return promise/callvack
	return new Promise((resolve, reject) => {

            // Closure to capture the file information.
            reader.onload = (function (theFile) {
                return function (e) {
                    console.log(e.target.result);
                    resolve(e.target.result)
                };
            })(fileData);


            if (typeof (fileData) !== 'undefined') {
                // Read in the image file as a data URL.
                reader.readAsDataURL(fileData);

            } else {
//                var success = function (result) {
//                    fileData = result;
//                    reader.readAsDataURL(fileData);
//                };
//                var url = Routing.getBaseUrl().replace(/\w+\.php$/gi, '') + '/' + item.path + '/' + item.mediaExtra.path;
//
//                var xhr = new XMLHttpRequest();
//                xhr.open('GET', url, true);
//                xhr.responseType = "blob";
//                xhr.onreadystatechange = function () {
//                    if (xhr.readyState === 4) {
//                        if (success)
//                            success(xhr.response);
//                    }
//                };
//                xhr.send(null);
            }
	})
    }
    // Set either CommonJS/AMD/Global
    if (typeof define === 'function' && define.amd) {
	define(function () { return fileReader; });
    } else if (typeof exports !== 'undefined') {
	if (typeof module !== 'undefined' && module.exports) {
	    exports = module.exports = fileReader;
	}
	exports.fileReader = fileReader;
    } else {
	global.fileReader = fileReader;
    }
})(this);

//        }
//        ;
            
            
//                    item.mediaExtra.file = e.target.result;
//                    item.view.updateProgress(100);
//                    view.updatePreview();
//                    if (!item.id) {
////                        create();
//                    } else {
////                        view.setProgressType('progress-bar-success');
////                        view.removeProgress();
//                    }
            
//	    input.addEventListener('change', e => {
//		resolve(input.files)
//		const lastArg = args[args.length - 1]
//		if (typeof lastArg === "function") lastArg(input.files)
//
//		// IE10/11 Addition
//		document.body.removeChild(input)
//	    })
//
//	    // Simluate click event
//	    const evt = document.createEvent('MouseEvents');
//	    evt.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);
//	    input.dispatchEvent(evt);